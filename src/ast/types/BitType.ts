import { EnumType, superenum } from '@ncoderz/superenum';

const BitTypeRaw = {
  book: 'book',
  bookFrontispiece: 'book-frontispiece',
  bookTitle: 'book-title',
  bookCopyright: 'book-copyright',
  bookDedication: 'book-dedication',
  bookForword: 'book-foreword',
  bookPreface: 'book-preface',
  bookPrologue: 'book-prologue',
  bookEpilogue: 'book-epilogue',
  bookIntroduction: 'book-introduction',
  bookIncitingIncident: 'book-inciting-incident',
  bookConclusion: 'book-conclusion',
  bookAfterword: 'book-afterword',
  bookPostscript: 'book-postscript',
  bookAppendix: 'book-appendix',
  bookAddendum: 'book-addendum',
  bookAcknowledgments: 'book-acknowledgments',
  bookListOfContributors: 'book-list-of-contributors',
  bookBibliography: 'book-bibliography',
  bookReferenceList: 'book-reference-list',
  bookEndnotes: 'book-endnotes',
  bookNotes: 'book-notes',
  bookCopyrightPermissions: 'book-copyright-permissions',
  bookTeaser: 'book-teaser',
  bookAutherBio: 'book-author-bio',
  bookRequestForABookReview: 'book-request-for-a-book-review',
  bookComingSoon: 'book-coming-soon',
  bookReadMore: 'book-read-more',
  bookSummary: 'book-summary',
  bookEpigraph: 'book-epigraph',
  chapter: 'chapter',
  summary: 'summary',
  bitAlias: 'bit-alias',
  internalLink: 'internal-link',
  anchor: 'anchor',
  groupBorn: 'group-born',
  groupDied: 'group-died',
  cloze: 'cloze',
  clozeInstructionGrouped: 'cloze-instruction-grouped',
  clozeSolutionGrouped: 'cloze-solution-grouped',
  clozeAndMultipleChoiceText: 'cloze-and-multiple-choice-text',
  info: 'info',
  multipleChoice: 'multiple-choice',
  multipleChoice1: 'multiple-choice-1',
  multipleChoiceText: 'multiple-choice-text',
  multipleResponse: 'multiple-response',
  multipleResponse1: 'multiple-response-1',
  note: 'note',
  essay: 'essay',
  example: 'example',
  interview: 'interview',
  interviewInstructionGrouped: 'interview-instruction-grouped',
  learningPathLti: 'learning-path-lti',
  learningPathStep: 'learning-path-step',
  learningPathBook: 'learning-path-book',
  learningPathSign: 'learning-path-sign',
  learningPathVideoCall: 'learning-path-video-call',
  learningPathLearningGoal: 'learning-path-learning-goal',
  learningPathClosing: 'learning-path-closing',
  learningPathFeedback: 'learning-path-feedback',
  learningPathBotTraining: 'learning-path-bot-training',
  learningPathExternalLink: 'learning-path-external-link',
  learningPathClassroomTraining: 'learning-path-classroom-training',
  learningPathClassroomEvent: 'learning-path-classroom-event',
  match: 'match',
  matchReverse: 'match-reverse',
  matchPicture: 'match-picture',
  matchAudio: 'match-audio',
  matchSolutionGrouped: 'match-solution-grouped',
  quote: 'quote',
  remark: 'remark',
  trueFalse1: 'true-false-1',
  trueFalse: 'true-false',
  sequence: 'sequence',
  statement: 'statement',
  correction: 'correction',
  mark: 'mark',
  documentUpload: 'document-upload',
  takePicture: 'take-picture',
  recordAudio: 'record-audio',
  preparationNote: 'preparation-note',
  assignment: 'assignment',
  article: 'article',
  articleAttachment: 'article-attachment',
  flashcard: 'flashcard',
  flashcard1: 'flashcard-1',
  chat: 'chat',
  conversation: 'conversation',
  selfAssessment: 'self-assessment',
  rating: 'rating',
  sampleSolution: 'sample-solution',
  survey: 'survey',
  survey1: 'survey-1',
  surveyAnonymous: 'survey-anonymous',
  surveyAnonymous1: 'survey-anonymous-1',
  hint: 'hint',
  botInterview: 'bot-interview',
  botActionRatingNumber: 'bot-action-rating-number',
  botActionResponse: 'bot-action-response',
  botActionTrueFalse: 'bot-action-true-false',
  botActionSend: 'bot-action-send',
  botActionAnnounce: 'bot-action-announce',
  botActionSave: 'bot-action-save',
  botActionRemind: 'bot-action-remind',
  code: 'code',
  card1: 'card-1',
  question1: 'question-1',
} as const;

const BitType = superenum(BitTypeRaw);

export type BitTypeKeys = keyof typeof BitTypeRaw;
export type BitTypeType = EnumType<typeof BitType>;

export { BitType };
